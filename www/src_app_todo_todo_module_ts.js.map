{"version":3,"file":"src_app_todo_todo_module_ts.js","mappings":"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","sources":["./src/app/todo/todo-routing.module.ts","./src/app/todo/todo.module.ts","./src/app/todo/todo.page.ts","./src/app/todo/todo.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TodoPage } from './todo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TodoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TodoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TodoPageRoutingModule } from './todo-routing.module';\n\nimport { TodoPage } from './todo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TodoPageRoutingModule\n  ],\n  declarations: [TodoPage]\n})\nexport class TodoPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.page.html',\n  styleUrls: ['./todo.page.scss'],\n})\nexport class TodoPage implements OnInit {\n\n  libelle: string = null;\n  valid = true;\n  doneList: string[] = [];\n  unDoneList: string[] = [];\n  constructor(\n    public alertController: AlertController,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addTask(libelle: string) {\n    if (libelle) {\n      this.unDoneList.push(libelle);\n    }\n  }\n\n  async onAddTask() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Nouvelle tâche',\n      inputs: [\n        {\n          name: 'libelle',\n          type: 'text',\n          placeholder: 'Entrer le libellé de la tâche'\n        },\n      ],\n      buttons: [\n        {\n          text: 'annuler',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'valider',\n          handler: (value) => {\n            if (value.libelle) {\n              console.log(value.libelle);\n              this.addTask(value.libelle);\n            }\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  markDone(libelle: string) {\n    if (libelle) {\n      const index = this.unDoneList.indexOf(libelle);\n      if (index > -1) {\n        this.unDoneList.splice(index, 1);\n        this.doneList.push(libelle);\n      }\n    }\n  }\n\n  markUnDone(libelle: string) {\n    if (libelle) {\n      const index = this.doneList.indexOf(libelle);\n      if (index > -1) {\n        this.doneList.splice(index, 1);\n        this.unDoneList.push(libelle);\n      }\n    }\n  }\n\n  deleteTask(libelle: string, doneList = true) {\n    if (libelle && doneList) {\n      const index = this.doneList.indexOf(libelle);\n      if (index > -1) {\n        this.doneList.splice(index, 1);\n      }\n    } else if (libelle && !doneList){\n      const index = this.unDoneList.indexOf(libelle);\n      if (index > -1) {\n        this.unDoneList.splice(index, 1);\n      }\n    }\n  }\n\n  async onDeleteTask(libelle: string, doneList = true) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: ' supprimer cette tâche ?',\n      message: 'Êtes vous sûres de vouloir supprimer cette tâche',\n      buttons: [\n        {\n          text: 'annuler',\n          role: 'cancel',\n          cssClass: 'secondary',\n          id: 'cancel-button',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'supprimer',\n          id: 'confirm-button',\n          handler: () => {\n            this.deleteTask(libelle, doneList);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  submit() {\n    this.valid = true;\n    if (this.libelle) {\n      this.addTask(this.libelle);\n    } else {\n      this.valid = false;\n    }\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n    <ion-menu-button></ion-menu-button>\\n  </ion-buttons>\\n    <ion-title>Todo</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-button (click)=\\\"onAddTask()\\\">\\n    ajouter une tache\\n  </ion-button>\\n  <ion-card>\\n    <ion-item *ngIf=\\\"unDoneList.length <= 0\\\" lines=\\\"full\\\" class=\\\"ion-activated\\\">\\n      <ion-label> liste des tâches en cours vide </ion-label>\\n    </ion-item>\\n    <ion-item *ngFor=\\\"let item of unDoneList\\\" lines=\\\"full\\\" class=\\\"ion-activated\\\">\\n      <ion-icon (click)=\\\"markDone(item)\\\" name=\\\"square-outline\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label> {{ item }} </ion-label>\\n      <ion-icon name=\\\"trash\\\" (click)=\\\"onDeleteTask(item, false)\\\" slot=\\\"end\\\"></ion-icon>\\n    </ion-item>\\n\\n  </ion-card>\\n  <ion-card>\\n    <ion-item *ngIf=\\\"doneList.length <= 0\\\" lines=\\\"full\\\" class=\\\"ion-activated\\\">\\n      <ion-label> liste des tâches finies vide </ion-label>\\n    </ion-item>\\n    <ion-item *ngFor=\\\"let item of doneList\\\" lines=\\\"full\\\" class=\\\"ion-activated\\\">\\n      <ion-icon (click)=\\\"markUnDone(item)\\\" name=\\\"checkbox-outline\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label class=\\\"done\\\"> {{ item }} </ion-label>\\n      <ion-icon name=\\\"trash\\\" (click)=\\\"onDeleteTask(item, true)\\\" slot=\\\"end\\\"></ion-icon>\\n    </ion-item>\\n  </ion-card>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}